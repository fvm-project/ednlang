{:fvm.fvm/type :fvm.ednlang/defop
 :name :range
 :value [{:op :push
          :value 0}
         {:op :eq?
          :then [{:op :pop}
                 {:op :pop}]
          :else [{:op :pop}
                 {:op :dup}
                 {:op :push
                  :value 1}
                 {:op :swap}
                 {:op :sub}
                 {:op :range}]}]}

{:op :defop
 :name :mul-if-not-fact-end
 :value [{:op :swap}
         {:op :push
          :value :fact-end}
         {:op :eq?
          :then [{:op :pop}
                 {:op :pop}]
          :else [{:op :pop}
                 {:op :mul}
                 {:op :mul-if-not-fact-end}]}]}

{:op :defop
 :name :fact
 :value [{:op :push
          :value :fact-end}
         {:op :swap}
         {:op :range}
         {:op :mul-if-not-fact-end}]}

{:op :push
 :value 1000}
{:op :fact}

{:op :push
 :value 10000}
{:op :fact}
